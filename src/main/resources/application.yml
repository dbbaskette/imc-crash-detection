spring:
  application:
    name: crash-detection-processor
  main:
    web-application-type: none
  
  cloud:
    stream:
      function:
        definition: crashDetectionProcessor
      bindings:
        crashDetectionProcessor-in-0:
          destination: telematics_work_queue
          content-type: application/json
          group: crash-detection-group
          consumer:
            max-attempts: 3
            back-off-initial-interval: 1000
        crashDetectionProcessor-out-0:
          destination: crash_reports
          content-type: application/json
  
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 60000      # 60 seconds for initial connection
    requested-heartbeat: 60        # Heartbeat interval in seconds
    connection-recovery-interval: 5000  # 5 seconds between recovery attempts
    publisher-confirms: true
    publisher-returns: true
    cache:
      channel:
        size: 25
      connection:
        mode: channel
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 2000   # 2 seconds initial retry
          max-attempts: 10         # More attempts for startup
          max-interval: 30000      # Max 30 seconds between retries
          multiplier: 2.0          # Exponential backoff
        acknowledge-mode: auto
        prefetch: 1
  startup:
    max-wait-time: 300              # Maximum time to wait for RabbitMQ (seconds)
    check-interval: 5               # Interval between connection checks (seconds)

crash-detection:
  g-force-threshold: 4.0        # G-force threshold for crash detection
  speed-threshold: 5.0          # Speed threshold for sudden stops (mph)
  rollover-threshold: 3.0       # Gyroscope threshold for rollover detection (rad/s)
  spinning-threshold: 2.0       # Gyroscope Z-axis threshold for spinning detection (rad/s)

spark:
  app:
    name: CrashDetectionProcessor
  master: local[*]
  sql:
    adaptive:
      enabled: true
      coalescePartitions:
        enabled: true
  streaming:
    trigger:
      interval: 2 seconds
  processing:
    window:
      duration: 30 seconds
  storage:
    enabled: true
    path: file:///tmp/telemetry-data
    format: parquet
    partitioning:
      enabled: true
      columns: ["policy_id", "date"]
    compression: snappy
    write-mode: append

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.insurancemegacorp.crashdetection: INFO
    org.springframework.amqp: WARN